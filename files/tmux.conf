set -g default-terminal 'tmux-256color'
#set -as terminal-features ",xterm-256color:RGB"
set-option -sa terminal-overrides ',xterm-256color:RGB'

set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

setw -g mouse on # enable mouse mode


# Colors
# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'


#Windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#Exit all windows
bind-key X kill-session

#Swap windows with previous or with next
bind-key L swap-window -t +1
bind-key H swap-window -t -1

# No delay for escape key press
set -sg escape-time 50

##### PANES #####
#Resizing panes C-a and then arrows while keeping Ctrl pressed
bind-key | split-window -h
bind-key - split-window -v

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D


bind -n C-u if -F '#{?#{m:*vim*,#{pane_current_command}},0,1}' "copy-mode" "send C-u"
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"
#current issue when run, commented as I am not using this mapping anyway
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

#Copy and paste
#paste from system clipboard
bind C-y run -b "xclip -o -sel cli | tmux load-buffer - && tmux paste-buffer -s ' '"
bind C-Y run -b "xclip -o -sel -i | tmux load-buffer - && tmux paste-buffer -s ' '"
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"

#set index to tmuxinator to locate panels
# start window numbering at 1
set -g base-index 1

# start pane numbering at 1
set -g pane-base-index 1

#   Options
# set -g @pomodoro_start 'o'                          # Start a Pomodoro with tmux-prefix + p
# set -g @pomodoro_cancel 'O'                         # Cancel a Pomodoro with tmux-prefix key + P
#
# set -g @pomodoro_mins 25                            # The duration of the pomodoro
# set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro
#
# set -g @pomodoro_on " #[fg=$text_red]üçÖ "           # The formatted output when the pomodoro is running
# set -g @pomodoro_complete " #[fg=$text_green]üçÖ "   # The formatted output when the break is running
#
# set -g @pomodoro_notifications 'on'                 # Turn on/off desktop notifications
# set -g @pomodoro_sound 'Pop'                        # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use)

#TMUX_COLORTAG_TAG_ONLY=yes
TMUX_COLORTAG_USE_POWERLINE=yes
TMUX_COLORTAG_ROUNDED_POWERLINE=yes
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Determinant/tmux-colortag'
#set -g @plugin 'olimorris/tmux-pomodoro-plus'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


# set -g status-right "#{pomodoro_status}"
#BEGIN tmux shell
set-option -g default-shell /bin/zsh
#END tmux shell
